; Template config file for managing Celery and Django dev server processes
; using Supervisor

[supervisord]
logfile = %(here)s/log/supervisord.log
logfile_maxbytes = 5MB
logfile_backups = 4
pidfile = /tmp/supervisord.pid
nocleanup = true

[unix_http_server]
file = /tmp/supervisord.sock

[supervisorctl]
serverurl = unix:///tmp/supervisord.sock

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:celery-w1]
; minimum of four processes required to avoid problems with monitoring tasks
command = python %(here)s/manage.py celery worker -n w1@%%h -c 4 -Q celery -E
environment = PATH="<%= @virtualenv %>/bin"
stdout_logfile = %(here)s/log/celery-w1.log
stdout_logfile_maxbytes = 5MB
stdout_logfile_backups = 4
redirect_stderr = true
autostart = true
autorestart = true
startsecs = 5
stopasgroup = true
killasgroup = true
priority = 995

[program:celery-w2]
; limits concurrency of file imports to one to avoid overloading system IO
command = python %(here)s/manage.py celery worker -n w2@%%h -c 1 -Q file_import -E
environment = PATH="<%= @virtualenv %>/bin"
stdout_logfile = %(here)s/log/celery-w2.log
stdout_logfile_maxbytes = 5MB
stdout_logfile_backups = 4
redirect_stderr = true
autostart = true
autorestart = true
startsecs = 5
stopasgroup = true
killasgroup = true
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
;stopwaitsecs = 60
priority = 995

[program:celerycam]
command = python %(here)s/manage.py celerycam
environment = PATH="<%= @virtualenv %>/bin"
stdout_logfile = %(here)s/log/celerycam.log
stdout_logfile_maxbytes = 5MB
stdout_logfile_backups = 4
redirect_stderr = true
autostart = true
autorestart = true
startsecs = 3
priority= 993

[program:celery-beat]
command = python %(here)s/manage.py celery beat
environment = PATH="<%= @virtualenv %>/bin"
stdout_logfile = %(here)s/log/celery-beat.log
stdout_logfile_maxbytes = 5MB
stdout_logfile_backups = 4
redirect_stderr = true
autostart = true
autorestart = true
startsecs = 3
priority= 997

[program:runserver]
command = python %(here)s/manage.py runserver 0.0.0.0:8000 --noreload
environment = PATH="<%= @virtualenv %>/bin"
stdout_logfile = %(here)s/log/refinery.log
stdout_logfile_maxbytes = 5MB
stdout_logfile_backups = 4
redirect_stderr = true
autostart = true
autorestart = true
startsecs = 3
priority = 999
