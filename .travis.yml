sudo: required

language: python
cache: pip
addons:
  firefox: "53.0.3"
  apt:
    packages:
      - xvfb

python:
  - 2.7

services:
  - postgresql

matrix:
  include:
    - env: GRUNT_TESTS=True
    - env: DJANGO_SELENIUM_TESTS=True
    - env: DJANGO_UNIT_TESTS=True

install:
  - |
    if ! test -n "$DJANGO_UNIT_TESTS"; then
      node --version
      NODE_VERSION=6.11.0
      nvm install $NODE_VERSION
      nvm use $NODE_VERSION
      node --version
      npm --version
      npm install -g npm@3.10.10
      npm --version
    fi
  - |
    if ! test -n "$GRUNT_TESTS"; then
      pip install -r requirements.txt --quiet
    fi
  - |
    if test -n "$DJANGO_SELENIUM_TESTS"; then
      GECKODRIVER_VERSION=v0.17.0
      TAR=geckodriver-$GECKODRIVER_VERSION-linux64.tar
      wget https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/$TAR.gz
      gunzip $TAR.gz
      tar -xvf $TAR
      chmod a+x geckodriver
      export PATH=$PATH:`pwd`
    fi

env:
  global:
    # These env vars are available to every build
    - PYTHONPATH=$PYTHONPATH:../refinery:../refinery/config
    - DJANGO_SETTINGS_MODULE=config.settings.prod

before_script:
  - |
    if ! test -n "$GRUNT_TESTS"; then
      createuser --createdb --no-superuser --no-createrole vagrant
      createdb -O vagrant refinery
      sudo mkdir /data
      sudo chown $USER /data
      cd refinery
      erb config/config.json.erb > config/config.json
      python manage.py migrate --noinput
      cd ../
    fi
  - |
    if ! test -n "$DJANGO_UNIT_TESTS"; then
      cd refinery
      npm install -g grunt-cli@0.1.13 bower@1.7.7 --progress false --quiet || ( cat npm-debug.log && false )
      cd ui
      npm install --progress false --quiet || ( cat npm-debug.log && false )
      bower install --config.interactive=false --quiet
      cd ../
    fi

script:
  - "set -e"
  - |
    if ! test -n "$GRUNT_TESTS"; then
      flake8 --exclude=migrations,ui ..
    fi

  - cd refinery
  - echo 'travis_fold:start:grunt'
  - pushd ui
  - if ! test -n "$DJANGO_UNIT_TESTS"; then grunt make; fi
  - if test -n "$GRUNT_TESTS"; then grunt test; fi
  - popd
  - echo 'travis_fold:end:grunt'

  - echo 'travis_fold:start:django-unit-tests'
  - if test -n "$DJANGO_UNIT_TESTS"; then coverage run manage.py test; fi
  - echo 'travis_fold:end:django-unit-tests'

  - echo 'travis_fold:start:django-selenium-tests'
  - if test -n "$DJANGO_SELENIUM_TESTS"; then coverage run manage.py test --pattern="selenium_tests.py"; fi
  - echo 'travis_fold:end:django-selenium-tests'

  - set +e # Currently, codecov does not always exit with 0, but that should not cause travis to fail.

after_success:
  - echo 'travis_fold:start:codecov'
  - codecov
  - npm run codecov
  - echo 'travis_fold:end:codecov'

notifications:
  slack:
    secure: nDs9Oj08nRizuD0edl6WcrSgaTPMyITQjZc4qPZpt+yOxUehWbrAmVhqYypfyvdj4qSi1E72rPTXftuBB1E1IZBgX4CCkrCkWGLgIxHaaValTd64oOX66eC3BbSehQxuJB7w1DWw54xBUkTy6+ufjAqiwhLpoEUeE296urAWYHU=
